default_language_version:
  python: python3.10
  node: system

default_stages: [commit]

fail_fast: false
repos:
  # Formatters
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        args:
          - --line-length=100
          - --target-version=py310

  - repo: https://github.com/asottile/reorder_python_imports
    rev: v3.12.0
    hooks:
      - id: reorder-python-imports
        args: [--application-directories, ".:emmo"]

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade

  - repo: https://github.com/hakancelikdev/unimport
    rev: 1.0.0
    hooks:
      - id: unimport
        args:
          - --remove

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        args:
          - --print-width=100
          - --prose-wrap=always
          - --tab-width=2

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: debug-statements
      - id: requirements-txt-fixer
      - id: check-ast # Simply check whether the files parse as valid python
      - id: check-case-conflict # Check for files that would conflict in case-insensitive filesystems
      - id: check-builtin-literals # Require literal syntax when initializing empty or zero Python builtin types
      - id: check-docstring-first # Check a common error of defining a docstring after code
      - id: check-merge-conflict # Check for files that contain merge conflict strings
      - id: check-yaml # Check yaml files
        args: ["--unsafe"]
      - id: end-of-file-fixer # Ensure that a file is either empty, or ends with one newline
      - id: mixed-line-ending # Replace or checks mixed line ending
      - id: trailing-whitespace # This hook trims trailing whitespace

  # Linters
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.6.0
    hooks:
      - id: mypy
        args:
          - --disallow-untyped-defs
          - --disallow-untyped-calls
          - --warn-unreachable
          - --warn-unused-ignores
          - --warn-redundant-casts
          - --no-implicit-optional
          - --no-strict-optional
          - --show-error-context
          - --ignore-missing-imports
          # cf https://github.com/python/mypy/issues/10632#issuecomment-1086711803
          - --install-types
          - --non-interactive

  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args:
          - --max-line-length=100
          - --max-cognitive-complexity=15
          - --ignore=E203,E266,W503
          - --class-attributes-order=__new__,__init__,__post_init__,__str__,magic_method,property_method,static_method,class_method,save,delete,method
          - --unused-arguments-ignore-dunder
          - --unused-arguments-ignore-abstract-functions
          - --unused-arguments-ignore-variadic-names
          - --unused-arguments-ignore-stub-functions
          - --unused-arguments-ignore-overload-functions
          - --unused-arguments-ignore-lambdas
        additional_dependencies:
          - pep8-naming==0.13.3
          - flake8-builtins==2.1.0
          - flake8-comprehensions==3.14.0
          - flake8-bugbear==23.9.16.0
          - flake8-pytest-style==1.7.0
          - flake8-cognitive-complexity==0.1.0
          - flake8-class-attributes-order==0.1.3
          - flake8-unused-arguments==0.0.13

  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args:
          - --convention=google

  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v2.4.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: ["ci", "build", "docs", "feat", "fix", "perf", "refactor", "style", "test"]

  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        name: codespell
        description: Checks for common misspellings in text files.
        entry: codespell --skip="*.js,*.json,*.ipynb" --ignore-words=".codespell-ignore.txt"
        language: python
        types: [text]

  - repo: https://github.com/kynan/nbstripout
    rev: 0.6.1
    hooks:
      - id: nbstripout

  # C/C++ formatters and linters
  - repo: https://github.com/cpp-linter/cpp-linter-hooks
    rev: v0.5.1
    hooks:
      - id: clang-format
        args: [--style=Google]
      # TODO: Find a solution to run clang-tidy in a way that the path to the Python header
      # is dynamically set. This is necessary to avoid the error: 'Python.h' file not found.
      # - id: clang-tidy
      #   args: [--config, '{Checks: "-*,clang-analyzer-*"}']
